services:
  postgres:
    image: postgres:16
    container_name: tips-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./crates/datastore/migrations:/migrations
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: tips-kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,PLAINTEXT_DOCKER://host.docker.internal:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ZOOKEEPER_CONNECT: ' '
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5
  kafka-setup:
    image: confluentinc/cp-kafka:7.5.0
    container_name: tips-kafka-setup
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      sh -c "
        kafka-topics --create --if-not-exists --topic tips-audit --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1
        kafka-topics --create --if-not-exists --topic tips-ingress-rpc --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1
        kafka-topics --list --bootstrap-server kafka:29092
      "

  minio:
    image: minio/minio:latest
    container_name: tips-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "7000:9000"
      - "7001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio-setup:
    image: minio/mc
    container_name: tips-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/tips;
      /usr/bin/mc anonymous set public minio/tips;
      exit 0;
      "

  simulator-cl:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.13.7
    container_name: tips-simulator-cl
    depends_on:
      simulator:
        condition: service_healthy
    profiles:
      - simulator
    ports:
      - "18545:8545" # RPC
      - "19222:9222" # P2P TCP
      - "19222:9222/udp" # P2P UDP
      - "17300:7300" # metrics
      - "16060:6060" # pprof
    volumes:
      - ~/.playground/devnet/jwtsecret:/data/jwtsecret:ro
      - ~/.playground/devnet/rollup.json:/data/rollup.json:ro
    environment:
      # NETWORK CONFIGURATION
      OP_NODE_NETWORK: ""
      OP_NODE_ROLLUP_CONFIG: /data/rollup.json
      
      # BASE SEQUENCER ENDPOINTS
      RETH_SEQUENCER_HTTP: http://host.docker.internal:8547
      OP_SEQUENCER_HTTP: http://host.docker.internal:8547
      OP_RETH_SEQUENCER_HTTP: http://host.docker.internal:8547
      
      # SYNC CONFIGURATION
      OP_NODE_SYNCMODE: consensus-layer
      OP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS: "true"
      
      # L1 CONFIGURATION
      OP_NODE_L1_ETH_RPC: http://host.docker.internal:8545
      OP_NODE_L1_BEACON: http://host.docker.internal:3500
      OP_NODE_L1_RPC_KIND: debug_geth
      OP_NODE_L1_TRUST_RPC: "false"
      
      # ENGINE CONFIGURATION
      OP_NODE_L2_ENGINE_KIND: reth
      OP_NODE_L2_ENGINE_RPC: http://simulator:4444
      OP_NODE_L2_ENGINE_AUTH: /data/jwtsecret
      
      # P2P CONFIGURATION
      OP_NODE_P2P_LISTEN_IP: 0.0.0.0
      OP_NODE_P2P_LISTEN_TCP_PORT: "9222"
      OP_NODE_P2P_LISTEN_UDP_PORT: "9222"
      OP_NODE_INTERNAL_IP: "true"
      OP_NODE_P2P_ADVERTISE_IP: host.docker.internal
      OP_NODE_P2P_ADVERTISE_TCP: "19222"
      OP_NODE_P2P_ADVERTISE_UDP: "19222"
      # Only connect to the sequencer in playground mode
      OP_NODE_P2P_NO_DISCOVERY: "true"
      
      # RPC CONFIGURATION
      OP_NODE_RPC_ADDR: 0.0.0.0
      OP_NODE_RPC_PORT: "8545"
      
      # LOGGING & MONITORING
      OP_NODE_LOG_LEVEL: debug
      OP_NODE_LOG_FORMAT: json
      OP_NODE_SNAPSHOT_LOG: /tmp/op-node-snapshot-log
      OP_NODE_METRICS_ENABLED: "true"
      OP_NODE_METRICS_ADDR: 0.0.0.0
      OP_NODE_METRICS_PORT: "7300"
      STATSD_ADDRESS: "172.17.0.1"
    env_file:
      - .env.playground
