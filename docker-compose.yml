services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: tips-kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,PLAINTEXT_DOCKER://host.docker.internal:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ZOOKEEPER_CONNECT: ' '
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5
  kafka-setup:
    image: confluentinc/cp-kafka:7.5.0
    container_name: tips-kafka-setup
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      sh -c "
        kafka-topics --create --if-not-exists --topic tips-audit --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1
        kafka-topics --create --if-not-exists --topic tips-ingress --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1
        kafka-topics --list --bootstrap-server kafka:29092
      "

  minio:
    image: minio/minio:latest
    container_name: tips-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "7000:9000"
      - "7001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio-setup:
    image: minio/mc
    container_name: tips-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/tips;
      /usr/bin/mc anonymous set public minio/tips;
      exit 0;
      "

# Ethereum Nodes in TIPS
# ======================
#
# ┌─────────────────────┬──────────────────────────────────┬─────────────────────────────────────┐
# │ Component           │ Production                       │ Local Development                   │
# ├─────────────────────┼──────────────────────────────────┼─────────────────────────────────────┤
# │ Sequencer           │                                  │                                     │
# │  - Consensus Layer  │ "consensus" container running    │ builder-playground op-node          │
# │                     │ op-node                          │ (runs separately within Docker)     │
# │  - Execution Layer  │ "execution" container running    │ builder-playground op-geth          │
# │                     │ base/node-reth                   │ (runs separately within Docker)     │
# │  - Builder          │ "builder" container running      │ op-rbuilder                         │
# │                     │ op-rbuilder                      │ (runs on host machine)              │
# ├─────────────────────┼──────────────────────────────────┼─────────────────────────────────────┤
# │ RPC Node            │                                  │                                     │
# │  - Consensus Layer  │ "consensus" container running    │ node-reth-consensus (container)     │
# │                     │ op-node                          │                                     │
# │  - Execution Layer  │ "execution" container running    │ node-reth-execution (container)     │
# │                     │ base/node-reth                   │                                     │
# ├─────────────────────┼──────────────────────────────────┼─────────────────────────────────────┤
# │ L1 Dependencies     │ Externally hosted L1 node        │ builder-playground el + beacon      │
# │                     │                                  │ (el: 8545, beacon: 3500)            │
# └─────────────────────┴──────────────────────────────────┴─────────────────────────────────────┘

  node-reth-execution:
    image: node-reth:latest
    container_name: tips-node-reth-execution
    volumes:
      - ~/.playground/devnet/jwtsecret:/data/jwtsecret:ro
      - ~/.playground/devnet/rollup.json:/data/rollup.json:ro
      - ~/.playground/devnet/l2-genesis.json:/data/l2-genesis.json:ro
      - ~/.playground/devnet:/playground
    command:
      - node
      - --datadir
      - /playground/tips-node-reth
      - --chain
      - /data/l2-genesis.json
      - --http
      - --http.addr
      - 0.0.0.0
      - --http.port
      - "8545"
      - --authrpc.addr
      - 0.0.0.0
      - --authrpc.port
      - "8551"
      - --authrpc.jwtsecret
      - /data/jwtsecret
      - --disable-discovery
    env_file:
      - .env.docker
    environment:
      PLAYGROUND_DIR: /playground
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8545 -X POST -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  node-reth-consensus:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.13.7
    container_name: tips-node-reth-consensus
    depends_on:
      node-reth-execution:
        condition: service_healthy
    volumes:
      - ~/.playground/devnet/jwtsecret:/data/jwtsecret:ro
      - ~/.playground/devnet/rollup.json:/data/rollup.json:ro
    env_file:
      - .env.docker
    environment:
      OP_NODE_L2_ENGINE_RPC: http://node-reth-execution:8551
